<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:p="http://www.springframework.org/schema/p"
    xmlns:tx="http://www.springframework.org/schema/tx"
    xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context 
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx.xsd">
        
        <!-- 配置自动扫描 -->
        <context:component-scan base-package="com.yanan"></context:component-scan>
        <!-- 配置外部引入,加载jdbc的配置文件。 -->
        <context:property-placeholder location="classpath:conf/jdbc.properties"/>
        
        <bean id="dataSource" class="org.apache.commons.dbcp2.BasicDataSource">
        	<property name="driverClassName" value="${jdbc.driverClassName}"/>
        	<property name="url" value="${jdbc.url}"/>
        	<property name="username" value="${jdbc.username}"/>
        	<property name="password" value="${jdbc.password}"/>
        	
        	<property name="maxTotal" value="${dbcp.maxTotal}"/>
        	<property name="maxIdle" value="${dbcp.maxIdle}"/>
        	<property name="minIdle" value="${dbcp.minIdle}"/>
        	<property name="initialSize" value="${dbcp.initialSize}"/>
        	<property name="logAbandoned" value="${dbcp.logAbandoned}"/>
        	<property name="RemoveAbandonedOnBorrow" value="${dbcp.RemoveAbandonedOnBorrow}"/>
        	<property name="RemoveAbandonedOnMaintenance" value="${dbcp.RemoveAbandonedOnMaintenance}"/>
        	<property name="removeAbandonedTimeout" value="${dbcp.removeAbandonedTimeout}"/>
        	<property name="MaxWaitMillis" value="${dbcp.MaxWaitMillis}"/>
        	<!-- 每多少秒运行一次空闲连接回收器 -->
        	<property name="timeBetweenEvictionRunsMillis" value="${dbcp.timeBetweenEvictionRunsMillis}"/>
        	<property name="numTestsPerEvictionRun" value="${dbcp.numTestsPerEvictionRun}" />
        	<property name="minEvictableIdleTimeMillis" value="${dbcp.minEvictableIdleTimeMillis}"/>
        </bean>
        
        <!-- 配置mybatis的sessionFactory -->
        <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        	<!-- 关联数据库 -->
        	<property name="dataSource" ref="dataSource"/>
        	<!-- 配置mybatis文件路径 -->
        	<property name="configLocation" value="classpath:conf/mybatis-config.xml"/>
        	<!-- 配置自动扫描mapper里面的xml文件,这里要用“/”来隔开，而不是用“.” -->
        	<property name="mapperLocations" value="classpath:com/yanan/mapper/*.xml"/>
        </bean>
        
        <!-- 配置dao接口所在包名，spring会自动找其下的接口 -->
        <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        	<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
        	<property name="basePackage" value="com.yanan.dao"/>
        </bean>
        
        <!-- 配置事务管理器 -->
        <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        	<property name="dataSource" ref="dataSource"/>
        </bean>
        
        <!-- 配置事务通知属性 -->
        <tx:advice id="txAdvice" transaction-manager="transactionManager">
        	<!-- 定义事务传播属性 -->
        	<tx:attributes>
        		<tx:method name="insert*" propagation="REQUIRED"/>
        		<tx:method name="update*" propagation="REQUIRED"/>
        		<tx:method name="edit*" propagation="REQUIRED"/>
        		<tx:method name="save*" propagation="REQUIRED"/>
        		<tx:method name="add*" propagation="REQUIRED"/>
        		<tx:method name="new*" propagation="REQUIRED"/>
        		<tx:method name="set*" propagation="REQUIRED"/>
        		<tx:method name="remove*" propagation="REQUIRED"/>
        		<tx:method name="delete*" propagation="REQUIRED"/>
        		<tx:method name="change*" propagation="REQUIRED"/>
        		<tx:method name="alter*" propagation="REQUIRED"/>
        		<tx:method name="assign*" propagation="REQUIRED"/>
        		<tx:method name="keep*" propagation="REQUIRED"/>
        		<tx:method name="validate*" propagation="REQUIRED" read-only="true"/>
        		<tx:method name="get*" propagation="REQUIRED" read-only="true"/>
        		<tx:method name="find*" propagation="REQUIRED" read-only="true"/>
        		<tx:method name="load*" propagation="REQUIRED" read-only="true"/>
        		<tx:method name="*" propagation="REQUIRED" read-only="true"/>
        	</tx:attributes>
        </tx:advice>
        
        <!-- 配置事务切面 -->
        <aop:config>
        	<aop:pointcut expression="execution(* com.yanan.bo..*.*(..))" id="serviceOperation"/>
        	<aop:advisor advice-ref="txAdvice" pointcut-ref="serviceOperation"/>
        </aop:config>
        
</beans>